name: publish
on: 
  schedule:
    - cron: '38 23 * * *'
  release:
    types: [published]
    branches: [ "foxy_devel" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*-arm' ]
  pull_request:
    branches: [ "foxy_devel" ]  # TBD


env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
  ROS_DISTRO: foxy

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        include:
          # - dockerfile: .docker_utils/Dockerfile.f1tenth_x86
          #   tag: x86
          - dockerfile: .docker_utils/Dockerfile.f1tenth_arm
            tag: arm
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/arm64/v8
        
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.5.0 # c3667d99424e7e6047999fb6246c0da843953c65 #v3.0.1
        with:
          cosign-release: 'v2.2.4'
      
      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3 # b167a89702b8b5314c104ab9d211b3dcf774f2b1
        with:
          platforms: linux/arm64/v8

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3 # f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5 # 507c2f2dc502c992ad446e3d7a5dfbe311567a96
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ env.ROS_DISTRO }}-${{ matrix.tag }}
      
      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker final
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          file: ${{ matrix.dockerfile }}
          tags: ${{ steps.meta.outputs.tags }}
          platforms: linux/arm64/v8
          labels: ${{ steps.meta.outputs.labels }}
          ssh: |
            default=${{ env.SSH_AUTH_SOCK }}
          cache-from: type=gha
          cache-to: type=gha,mode=max


      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
#       - name: Sign the published Docker image
#         if: ${{ github.event_name != 'pull_request' }}
#         env:
#           COSIGN_EXPERIMENTAL: "true"
#         # This step uses the identity token to provision an ephemeral certificate
#         # against the sigstore community Fulcio instance.
#         run: echo "${{ steps.meta.outputs.tags }}" | xargs -I {} cosign sign {}@${{ steps.build-and-push.outputs.digest }}